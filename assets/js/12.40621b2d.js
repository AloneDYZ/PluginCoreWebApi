(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{375:function(e,t,n){"use strict";n.r(t);var a=n(45),r=Object(a.a)({},(function(){var e=this.$createElement,t=this._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h2",{attrs:{id:"istartupplugin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#istartupplugin"}},[this._v("#")]),this._v(" IStartupPlugin")]),this._v(" "),t("div",{staticClass:"language-C# extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('namespace PluginCore.IPlugins\n{\n    /// <summary>\n    /// 实验阶段\n    /// <para>无法热插拔: 需要启用插件后, 再 重启站点</para>\n    /// </summary>\n    public interface IStartupPlugin : IPlugin\n    {\n        /// <summary>\n        /// This method gets called by the runtime. Use this method to add services to the container.\n        /// </summary>\n        /// <param name="services"></param>\n        void ConfigureServices(IServiceCollection services);\n\n        int ConfigureServicesOrder { get; }\n\n        /// <summary>\n        /// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\n        /// </summary>\n        /// <param name="app"></param>\n        /// <param name="env"></param>\n        void Configure(IApplicationBuilder app);\n\n        int ConfigureOrder { get; }\n    }\n}\n')])])])])}),[],!1,null,null,null);t.default=r.exports}}]);